from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
TOKEN_API = "5659392835:AAEQDstlwF2rPtTtLG6_EwsAaGp6xxZEvv4"

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

kb = ReplyKeyboardMarkup(resize_keyboard=True)
b1 = KeyboardButton(text="/matan")
b2 = KeyboardButton(text="/statistics")
b3 = KeyboardButton(text="/ipr")
b4 = KeyboardButton(text="/caos")
b5 = KeyboardButton(text="/evaluation")
kb.add(b1, b2)
kb.add(b3, b4, b5)

ikb = InlineKeyboardMarkup(row_width=2)
ib = InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏", url="http://wiki.cs.hse.ru/Wiki_–§–ö–ù")
ikb.add(ib)

HELP_COMMAND = """
1. <b> /start </b> - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
2. <b> /help </b> - –ø–æ–º–æ—â—å 
3. <b>/count </b> - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∑–æ–≤–æ–≤
4. <b> /contacts </b> - –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
5. <b> /matan </b> - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É
6. <b> /statistics </b> - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π 
7. <b> /ipr </b> - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ò–ü–†
8. <b> /caos </b> - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ê–ö–û–°
9. <b> /site </b> - –≤–∏–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –§–ö–ù
10. <b> /evaluation </b> - –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ 
"""

count = 0

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(text=" <b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! </b> \n <em> –Ø –±–æ—Ç –¥–ª—è 2-–æ–≥–æ –∫—É—Ä—Å–∞ –§–ö–ù –ü–ú–ò –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ"
                              " –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? </em>", parse_mode="HTML",
                         reply_markup=kb)
    global count
    count += 1

# –ü–æ–º–æ—â—å
@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.reply(text=HELP_COMMAND, parse_mode="HTML")
    global count
    count += 1

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∑–æ–≤–æ–≤
@dp.message_handler(commands=['count'])
async def check_count(message: types.Message):
    global count
    await message.answer(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∑–æ–≤–æ–≤:{count}')
    count += 1

# –í—ã—Å—ã–ª–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –ª–µ–∫—Ç–æ—Ä–æ–≤
@dp.message_handler(commands=['contacts'])
async def send_image(message: types.Message):
    await message.answer(text="‚úÖ <b> –í—ã—Å—ã–ª–∞—é –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π </b>", parse_mode="HTML")
    photo = open('/Users/zarema/Desktop/telegram-bot-test/contact.png', 'rb')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    global count
    count += 1

# –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (—Ç–µ–∫—Å—Ç + –¥–æ–∫—É–º–µ–Ω—Ç + –∫–Ω–æ–ø–∫–∞)
@dp.message_handler(commands=['matan'])
async def help_command(message: types.Message):
    await message.answer(text="‚úÖ <b> –í—ã—Å—ã–ª–∞—é –ª–µ–∫—Ü–∏–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É </b>", parse_mode="HTML")
    doc = open('/Users/zarema/Desktop/telegram-bot-test/MA_2_lec1.pdf', 'rb')
    await bot.send_document(chat_id=message.chat.id, document=doc)
    global count
    count += 1

# –¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π (—Ç–µ–∫—Å—Ç + –¥–æ–∫—É–º–µ–Ω—Ç + –∫–Ω–æ–ø–∫–∞)
@dp.message_handler(commands=['statistics'])
async def help_command(message: types.Message):
    await message.answer(text="‚úÖ <b> –í—ã—Å—ã–ª–∞—é –ª–µ–∫—Ü–∏–∏ –ø–æ —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π </b>", parse_mode="HTML")
    doc = open('/Users/zarema/Desktop/telegram-bot-test/conspects.pdf', 'rb')
    await bot.send_document(chat_id=message.chat.id, document=doc)
    global count
    count += 1

# –ò–ü–† (—Ç–µ–∫—Å—Ç + —Å—Å—ã–ª–∫–∞ + –∫–Ω–æ–ø–∫–∞)
@dp.message_handler(commands=['ipr'])
async def help_command(message: types.Message):
    await message.answer(text="‚úÖ <b> –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –ò–ü–† –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ </b> \n"
                              "http://wiki.cs.hse.ru/–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã_–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π_—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏_2022/2023", parse_mode="HTML")
    global count
    count += 1

# –ê–∫–æ—Å (—Ç–µ–∫—Å—Ç + —Å—Å—ã–ª–∫–∞ + –∫–Ω–æ–ø–∫–∞)
@dp.message_handler(commands=['caos'])
async def help_command(message: types.Message):
    await message.answer(text="‚úÖ <b> –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –ê–ö–û–° –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ </b> \n"
                              "http://wiki.cs.hse.ru/CAOS-2022", parse_mode="HTML")
    global count
    count += 1

# –°–∞–π—Ç (—Ç–µ–∫—Å—Ç + —Å—Å—ã–ª–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö)
@dp.message_handler(commands=['site'])
async def help_command(message: types.Message):
    await message.answer(text="‚úÖ <b> –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã </b>", parse_mode="HTML", reply_markup=ikb)
    global count
    count += 1

# –û—Ü–µ–Ω–∫–∞ –±–æ—Ç–∞

@dp.message_handler(commands=['evaluation'])
async def evalution_command(message: types.Message):
    ikb1 = InlineKeyboardMarkup(row_width=2)
    ib1 = InlineKeyboardButton(text='‚ù§Ô∏è', callback_data='like')
    ib2 = InlineKeyboardButton(text='üíî', callback_data='dislike')
    ikb1.add(ib1, ib2)
    photo = open('/Users/zarema/Desktop/telegram-bot-test/mark.jpeg', 'rb')
    await bot.send_photo(chat_id=message.chat.id, photo=photo, caption="–ö–∞–∫ –í–∞–º –±–æ—Ç?", reply_markup=ikb1)

# –û—Ü–µ–Ω–∫–∞ –±–æ—Ç–∞ - –¥–ª—è callback_data
@dp.callback_query_handler()
async def evalution_callback(callback: types.CallbackQuery):
    if callback.data == 'like':
        await callback.answer(text='–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É!')
    await callback.answer(text=':(')

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
